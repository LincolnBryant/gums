Manual Installation

 <This page provides installation instructions for the GUMS Service and also the GUMS Client.>

* Installing the GUMS Service

 <This section describes how to install the GUMS Service which provides the GUMS web interface and web services.>

** Prepare Java
 
 GUMS is written in Java, and requires Java 1.4.2 or greater to be installed to run. 
Be sure it is installed in your $PATH. Try running:

+-----------------------------------------+
[root@gums root]# java -version
java version "1.4.2_04";
Java(TM) 2 Runtime Environment, Standard Edition (build 1.4.2_04-b05)
Java HotSpot(TM) Client VM (build 1.4.2_04-b05, mixed mode)
+-----------------------------------------+

 If you do not have java installed, go to {{{http://java.sun.com}http://java.sun.com}}
and follow the instructions to get the latest version. Then add java to $PATH.

** Prepare the Database

 You will need a MySQL server with version 4.0.18 or greater installed. You can 
either install one from scratch or you can use an installation you have ready. 

** Prepare the Certificate Directory
 
 GUMS requires a host GRID certificate and key be present. The easiest way is to use the VDT,
but since but you are not, you are on your own here.

** Prepare Tomcat
 
 You will need Tomcat with version 5 or greater installed.  You will also need
to configure Tomcat to use the EGEE Security Manager to handle SSL authentication.  
To do this, download and run the 
{{{http://grid.racf.bnl.gov/mvn/gums/gums-service/tomcat5-glite-trustmanager-1.6.3-1.noarch.rpm}tomcat5-glite-trustmanager RPM}}.
Next, review the configuration of the server as:
 
+---------------------------------------+ 
[root@gums /]# cd /etc/tomcat5
[root@gums tomcat5]# vi server.xml
+---------------------------------------+

 Add the following section with the appropriate paths for your installation:

+---------------------------------------+
	<Connector port="8443">
               maxThreads="150" minSpareThreads="25" maxSpareThreads="75"
               enableLookups="false" disableUploadTimeout="true"
               acceptCount="100" debug="0" scheme="https" secure="true"
               sSLImplementation="org.glite.security.trustmanager.tomcat.TMSSLImplementation"
               sslCAFiles="<</etc/grid-security/certificates/*.0>>"
               crlFiles="<</etc/grid-security/certificates/*.r0>>"
               sslCertFile="<</etc/grid-security/hostcert.pem>>"
               sslKey="<</etc/grid-security/hostkey.pem>>"
               log4jConfFile="<</etc/tomcat5/log4j-trustmanager.properties>>"
               clientAuth="true" sslProtocol="TLS" />
+---------------------------------------+

** Download the GUMS Service

 The service itself is a standard java web application. Grab the latest 
gums-service war from {{{http://grid.racf.bnl.gov/mvn/gums/gums-service/1.2.0/gums-service-1.2.0.war}
http://grid.racf.bnl.gov/mvn/gums/gums-service/1.2.0/gums-service-1.2.0.war}} and extract it in the
webapps directory of tomcat.

** Create the Database

 You will need to create the database. You can do this by running the 
setupDatabase script as:
	
+----------------------------------------------+	
[root@gums webapps]# cd gums-service-1.2.0/scripts/
[root@gums scripts]# ./setupDatabase
Usage: ./setupDatabase [mysql user for GUMS] [GUMS server host] [GUMS mysql password]
[root@gums scripts]# ./setupDatabase gums gums.mysite.com secret
+----------------------------------------------+

 The script will only run on localhost. If you need to create db on 
another server, or with different account then root, edit the setupDatabase script as:

+----------------------------------------------+	
[root@gums scripts]# cat setupDatabase
#!/bin/sh
...
MYSQLPARAM="-p"
..
+----------------------------------------------+

** Add an Administrator

 You must add yourself to the admins user group as:
 
+----------------------------------------------+	
[root@gums scripts]# ./addAdmin
Adds an admin in the GUMS database on localhost
Usage: ./addAdmin [DN for administrator]
[root@gums scripts]# ./addAdmin "/DC=org/DC=doegrids/OU=People/CN=Your Self 83753"
+----------------------------------------------+	 

 All additional users may be added through the web interface or client tools.

** Configure timeout

 for user groups that specify a server and a persistence factory, the DNs are retrieved
from the server and put into the persistence factory at a regular interval.  The persistence
factory is the source from which the matching occurs.  The default is 720 minutes (12 hours),
but this can be changed in WEB-INF/web.xml at 'env-entry/env-entry-value'.

** Run Tomcat and MySQL

 Run Tomcat and MySQL.  Assuming they are installed by RPM, this is done as:

+----------------------------------------------+	
[root@gums /]# /etc/init.d/tomcat5 start
[root@gums /]# /etc/init.d/mysqld start
+----------------------------------------------+	

** Test

 Using a browser in which you have your grid certificate, go to:
{{{https://machine:8443/gums}https://machine:8443/gums}} or with
the port you configured Tomcat with.  You should
see the GUMS web interface. You might need to wait a bit for tomcat to 
realize the gums application was installed.  Try generating the grid map-file 
for the host "test.site.com" and it should give you some response.

* Installing the GUMS Client

 <This section describes how to install the GUMS Client, which provides command line tools for hosts and administrators. 
This package depends on the GUMS service being up and running.>

** Download and Run the GUMS Client RPM

 The client consists of several executables installed by RPM. Download and run the latest RPM from 
{{{http://grid.racf.bnl.gov/mvn/gums/gums-client/1.2.0/gums-client-1.2.0.rpm}
http://grid.racf.bnl.gov/mvn/gums/gums-client/1.2.0/gums-client-1.2.0.rpm}}. Listing the files
as:

+--------------------------------------------------+
[root@gums /]# ls /usr/sbin | grep gums
gums
gums-host
gums-host-cron
gums-nagios
gums-service
[username@gums /]#
+--------------------------------------------------+

 you willnotice that there are several executables in the bin directory:
	
	* <<gums-host>> - Allows access to the GUMS mapping services.
	
	* <<gums>> - Same functionality as gums-host only it uses a grid proxy file 
	(see use of Globus grid-proxy-init).

	* <<gums-host-cron>> - This script is intended to be run as a root cron process.  It calls the
	gums-host executable.  It generates a grid-map file, an inverse map, a list of VOs that can be authorized by 
	this CE node, and a list of	UNIX accounts that can potentially be authorized.  
	
	* <<gums-service>> - Allows access to all GUMS services including all those available
	through gums-host for administrator use.  It also uses a grid proxy file.
	
	* <<check-gums>> - A {{{http://www.nagios.org/}Nagios}} plugin for monitoring GUMS.

** Prepare the Certificate Directory and/or Globus

 Except for gums-host and gums-host-cron, the executables require use of the grid-proxy-init command
provided by Globus, which is provided by the VDT.  gums-host and gums-host-cron depend on a valid
certificate being present at /etc/grid-security/hostcert.pem and /etc/grid-security/hostkey.pem.
You are again on your own here.

** Configure

 Tell the gums-client where your GUMS server is by filling in your full machine name (even if you installed GUMS 
Admin on the same machine) as:

+--------------------------------------------------+
[root@gums /]# vi /etc/gums/gums-client.properties
gums.location=https://gums.mysite.com:8443/gums/services/GUMSAdmin
gums.authz=https://gums.mysite.com:8443/gums/services/GUMSAuthorizationServicePort
+--------------------------------------------------+

** Test

 Test the client by generating a mapfile at the command line

+--------------------------------------------------+
[root@gums /]# su - username
[username@gums /]# /usr/sbin/gums-host generateGridMapfile /DC=org/DC=doegrids/OU=Services/CN=test.site.com
+--------------------------------------------------+

 You should get the same response you got from the web server.

* Configure GUMS

 To do anything useful, you need to configure GUMS mappings, which is described in the next section.
